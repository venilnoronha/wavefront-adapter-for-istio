# requestsize instance for template metric
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: requestsize
  namespace: istio-system
spec:
  template: metric
  params:
    value: request.size | 0
    dimensions:
      source_service: source.workload.name | "unknown"
      source_service_namespace: source.workload.namespace | "unknown"
      source_version: source.labels["version"] | "unknown"
      destination_service: destination.service.name | "unknown"
      destination_service_namespace: destination.service.namespace | "unknown"
      destination_version: destination.labels["version"] | "unknown"
      response_code: response.code | 200
    monitored_resource_type: '"UNSPECIFIED"'
---
# requestcount instance for template metric
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: requestcount
  namespace: istio-system
spec:
  template: metric
  params:
    value: 1
    dimensions:
      source_service: source.workload.name | "unknown"
      source_service_namespace: source.workload.namespace | "unknown"
      source_version: source.labels["version"] | "unknown"
      destination_service: destination.service.name | "unknown"
      destination_service_namespace: destination.service.namespace | "unknown"
      destination_version: destination.labels["version"] | "unknown"
      response_code: response.code | 200
    monitored_resource_type: '"UNSPECIFIED"'
---
# requestduration instance for template metric
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: requestduration
  namespace: istio-system
spec:
  template: metric
  params:
    value: response.duration | "0ms"
    dimensions:
      source_service: source.workload.name | "unknown"
      source_service_namespace: source.workload.namespace | "unknown"
      source_version: source.labels["version"] | "unknown"
      destination_service: destination.service.name | "unknown"
      destination_service_namespace: destination.service.namespace | "unknown"
      destination_version: destination.labels["version"] | "unknown"
      response_code: response.code | 200
    monitored_resource_type: '"UNSPECIFIED"'
---
# responsesize instance for template metric
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: responsesize
  namespace: istio-system
spec:
  template: metric
  params:
    value: response.size | 0
    dimensions:
      source_service: source.workload.name | "unknown"
      source_service_namespace: source.workload.namespace | "unknown"
      source_version: source.labels["version"] | "unknown"
      destination_service: destination.service.name | "unknown"
      destination_service_namespace: destination.service.namespace | "unknown"
      destination_version: destination.labels["version"] | "unknown"
      response_code: response.code | 200
    monitored_resource_type: '"UNSPECIFIED"'
---
# tcpsentbytes instance for template metric
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: tcpsentbytes
  namespace: istio-system
spec:
  template: metric
  params:
    value: connection.sent.bytes | 0
    dimensions:
      source_service: source.workload.name | "unknown"
      source_service_namespace: source.workload.namespace | "unknown"
      source_version: source.labels["version"] | "unknown"
      destination_service: destination.service.name | "unknown"
      destination_service_namespace: destination.service.namespace | "unknown"
      destination_version: destination.labels["version"] | "unknown"
    monitored_resource_type: '"UNSPECIFIED"'
---
# tcpreceivedbytes instance for template metric
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: tcpreceivedbytes
  namespace: istio-system
spec:
  template: metric
  params:
    value: connection.received.bytes | 0
    dimensions:
      source_service: source.workload.name | "unknown"
      source_service_namespace: source.workload.namespace | "unknown"
      source_version: source.labels["version"] | "unknown"
      destination_service: destination.service.name | "unknown"
      destination_service_namespace: destination.service.namespace | "unknown"
      destination_version: destination.labels["version"] | "unknown"
    monitored_resource_type: '"UNSPECIFIED"'
---
# handler for adapter wavefront
apiVersion: "config.istio.io/v1alpha2"
kind: handler
metadata:
  name: wavefront-handler
  namespace: istio-system
spec:
  adapter: wavefront
  connection:
    address: "wavefront:8000"
  params:
    direct:
      server: https://YOUR-INSTANCE.wavefront.com
      token: YOUR-API-TOKEN
#    proxy:
#      address: YOUR-PROXY-IP:YOUR-PROXY-PORT
    flushInterval: 5s
    source: istio
    prefix: istio
    metrics:
    - name: requestsize
      instanceName: requestsize.instance.istio-system
      type: HISTOGRAM
      sample:
        expDecay:
          reservoirSize: 1024
          alpha: 0.015
    - name: requestcount
      instanceName: requestcount.instance.istio-system
      type: DELTA_COUNTER
    - name: requestduration
      instanceName: requestduration.instance.istio-system
      type: HISTOGRAM
      sample:
        expDecay:
          reservoirSize: 1024
          alpha: 0.015
    - name: responsesize
      instanceName: responsesize.instance.istio-system
      type: HISTOGRAM
      sample:
        expDecay:
          reservoirSize: 1024
          alpha: 0.015
    - name: tcpsentbytes
      instanceName: tcpsentbytes.instance.istio-system
      type: HISTOGRAM
      sample:
        expDecay:
          reservoirSize: 1024
          alpha: 0.015
    - name: tcpreceivedbytes
      instanceName: tcpreceivedbytes.instance.istio-system
      type: HISTOGRAM
      sample:
        expDecay:
          reservoirSize: 1024
          alpha: 0.015
---
# rule to dispatch to handler wavefront-handler
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: wavefront-rule
  namespace: istio-system
spec:
  actions:
  - handler: wavefront-handler.istio-system
    instances:
    - requestsize
    - requestcount
    - requestduration
    - responsesize
---
# rule to dispatch tcp metrics to handler wavefront-handler
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: wavefront-tcp-rule
  namespace: istio-system
spec:
  match: context.protocol == "tcp"
  actions:
  - handler: wavefront-handler.istio-system
    instances:
    - tcpsentbytes
    - tcpreceivedbytes
